library(shiny)
library(shinythemes)
library(shinydashboard)
library(shinyFiles)


# Shiny UI -------

feature_list<-
  list(
    h5("Feature selction:"),
    tags$div(align = 'left', 
             class = 'multicol', 
             checkboxGroupInput(inputId  = 'check1', 
                                label    = "Select the features:", 
                                choices  = c(""),
                                selected = ,
                                inline   = FALSE))
  )
ui <- fluidPage(
  
  navbarPage("TIDD v1.1",
             
    theme=shinytheme("flatly"), 
    id = "main_navbar",
    
    tabPanel(
      "About",
       tabBox(width = 12,
              tabPanel("About TIDD",
                       p("Tool-Independent and Data-Dependent PSM rescoring method."),
                       br(),
                       p("TIDD is a universal post-processing tool which supports confident peptideidentifications regardless of the search engine adopted. TIDD can work for any(including newly developed) search engines because it calculates universalfeatures that assess peptide-spectrum match quality while it allows additional featuresprovided by search engines (or users) as well."),
                       p("Here, we support two types of TIDD version -- a simple GUI based TIDD and command version of TIDD.
"),
                       
                       hr(style = "border-top: 1px solid #000000;"),
                       
                       p("GUI"),
                       p("1. Data Management: extract features and check feature densities"),
                       p("2. Model fitting: fit SVM models"),
                       
                       br(),
                       h6("*RAM size supported by \"R studio cloud\" is only 1G, so it takes a little time for feature extraction."),
                       h6("*Sample file description:"),
                       h6("1.test_required.tsv: contain 6 required features for feature extraction"),
                       h6("2.*_feature.stv: contain common features except calculated Xcorr"),
                       h6("3.*_xcorrColAdded.tsv: add calculated Xcorr feature"),
                       h6("4.*_ModelFitting_Results.tsv: add rescoring score feature"),
                       br(),
                       
                       hr(style = "border-top: 1px solid #000000;"),
                       p("Required:"),
                       p("1. R (v4.03 or above) packages: shiny, shinythemes, shinydashboard,e1071,ROCR"),
                       p("2. java jre/jdk v1.8 or above"),
                       
                       hr(style = "border-top: 1px solid #000000;"),
                       
                       p("Download: "),
                       tags$a(href="https://github.com/HonglanLi/TIDD.git", "1.Download code from github"),
                       br(),
                       tags$a(href="https://rstudio.cloud/spaces/178915/project/2994889", "2.Download code from R studio cloud"),
                       br(),
                       tags$a(href="https://honglan-li.shinyapps.io/project/", "3.Test GUI from shinyapps.io"),
                       
                       
                       ),
              tabPanel("Install & Download",
                
              )
         
       )
  ),
   tabPanel(
     "File upload & download",
    
   ),
    tabPanel(
      "Data Management",
      fluidRow(column(
        3, uiOutput("dart_currentTime", container = span)
      ),
      column(
        3, uiOutput("dart_last_update", container = span)
      )), 
      sidebarLayout(
        sidebarPanel(
          width = 3,
          
          h5("File Loading"),
          hr(style = "border-top: 1px solid #000000;"),
          h6("Peptide-spectrum matching key info.:"),
          h6("1. filename"),
          h6("2. scan number"),
          h6("3. charge"),
          
          br(),
          selectInput('psmfile',"Select one PSM file (tab-deliminated): ",choices = c("", list.files('data/PSM/.')),selected=c("test_required.tsv")),
         
          
          selectInput('msfile','Select one directory contained spectrum files(*.mgf):', choices = c("",list.files('data/MGF/.')),selected="test"),
          hr(style = "border-top: 1px solid #000000;"),
          
          br(),
         
          h5("Additional info"),
          
          tags$style(type='text/css', "text-input { font-size: 8px; line-height: 8px;} "),
          textInput("dec_pre","Decoy prefix: ", "XXX_"),
          textInput("prot_id","Protein column index: ", "6"),
          textInput("frag_tol","Fragment tol.(Da): ", "0.025"),
          
          br(),
          actionButton("loadButton", "First. Load Files", class="btn-success")
        ),
        mainPanel
        (
          fluidRow(
            dashboardBody
                  (
                tags$style(HTML("


                .box.box-solid.box-primary>.box-header {

                }

                .box.box-solid.box-primary{

                border-left-color:#f7f8f9;
                background:#f7f8f9
                }

                ")),
                    
                   column(width=8,
                  fluidRow(
                    tabBox
                    (   width=12,
                           id="psms", height="650",
                           tabPanel("PSMs",
                                    {
                                      textOutput('psm_filename')
                                      
                                      h6("Features in the psm result file.")
                                      br();
                                      tags$div(
                                        align='left',
                                        class='multicol',
                                        style="font-size: 10px; padding:0px",
                                        radioButtons("psmf","Column info (index.feature name):", choices=c("-"), inline=TRUE)
                                        
                                      )
                                      
                                    }),
                           tabPanel("Preview (table)",
                                    
                                    dataTableOutput('psmlist_preview'),
                                    
                                    ),
                           
                    ),),
                    fluidRow(
                    tabBox
                    (width=12,
                      id="ms2", height="450px",
                      tabPanel("Summary&Plot",
                              
                                 fluidRow(width=12,
                                       verbatimTextOutput("summary_feature"),
                                      
                                 ),
                                 fluidRow(width=12,
                                       plotOutput('feature_plot'))
                               ),
                      tabPanel("Extraction log",
                                        verbatimTextOutput('tidd'),
      
                               )
                    ),),
                  ),
               ),
           
              column(width = 4,
                     box( 
                       width=12,
                       theme="flatly",
                       h5("6 required features for PSM feature extraction:"),
                       hr(style = "border-top: 1px solid #000000;"),
                       h6("Write the corresponding column indices in the same order as below:"),
                       h6("(separator between indices: \",\")"),
                       h6("1. filename"),
                       h6("2. scan number"),
                       h6("3. charge"),
                       h6("4. precursor mass"),
                       h6("5. peptide "),
                       h6("6. protein (separator \";\")"),
                       
                       h6(""),
                       
                       textInput("required_feature","required column indices:","1,2,3,4,5,6"),
                       
                       actionButton("featureButton", " Second.Extract!", class="btn-success")
                       
                       
                       #uiOutput('feature_extract'),
                       
                      
                      )
            
        )
      )
      )
    )
  ),
  tabPanel(
    "Model Fitting",
     
    sidebarLayout(
      sidebarPanel(
        width = 3,
        
        h5("PSMs for model fitting"),
        hr(style = "border-top: 1px solid #000000;"),
        h6("Tab-deliminated file:"),
        h6("1. head: do not start with '#' symbol"),
        h6("2. one column for one feature"),
        
        br(),
        selectInput('psm_feature_file',"Select one PSM file : ",choices = c("", list.files('data/PSM/.')),
        ),
        actionButton("load2Button", " LOAD <GO> !", class="btn-success")
      ),
      mainPanel
      (
        tags$head(tags$style(
                    
                          
                          HTML("
                           
                            .multicol .shiny-options-group{
                            -webkit-column-count: 3;* Chrome, Safari, Opera */
                            -moz-column-count: 3;    /* Firefox */
                            column-count: 3;
                            -moz-column-fill: balanced;
                            -column-fill: balanced;
                            }
                            .checkbox{margin: 0;}
                            .checkbox p{margin:0px;}
                            .shiny-input-cantainer{margin-bottom:0px;}
                            ")
                          )),
        
        fluidRow(
          
          dashboardBody
          (
            column(width=12,
                   fluidRow(
                     br(),
                     tabBox(width=12,height="450px",
                            tabPanel("Feature selection",
                                     textOutput('feature_filename'),
                                     h5("x:"),
                                     
                                     column(width=9, height = "450px",
                                            tags$div(
                                                  align='left',
                                                  class='multicol',
                                                
                                                  checkboxGroupInput("check1","",choices = c("")),
                                                  style="font-size:11px ! important; text-align; left"
                                     )),
                                     column(
                                       width=3, height="450px",
                                       textOutput("x"),
                                       tags$style(type='text/css', ".selectize-input { font-size: 11px; line-height: 11px;} .selectize-dropdown { font-size: 11px; line-height: 11px; }"),
                                       selectInput("y"," y (tar/dec): (e.g. TorD)", multiple = FALSE, choices = list("====")),
                                       selectInput("model"," model:", multiple = FALSE, choices = c("iterative SVM")),
                                       selectInput("init_score"," init score: (e.g. xcorr or calXcorr)", multiple = FALSE, choices = c("====")),
                                       selectInput("k_cross"," k-CV:", multiple = FALSE, choices = c("3","5","10")),
                                       tags$style(type='text/css', "text-input { font-size: 11px; line-height: 11px;} "),
                                       textInput("tain_size","Max train size: ", "1000"),
                                       textInput("iteration","Max iteration (SVM): ", "1"),
                                       actionButton("modelbutton", " Fitting <GO> !", class="btn-success")
                                    
                                       )
                   ),),),
                   fluidRow(
                     tabBox
                     (width=12,
                       id="model_fit", height="450px",
                       tabPanel("Model fitting",
                                
                                fluidRow(
                                  column(width=6,
                                    h5("log:"),
                                    verbatimTextOutput("confirm"),
                                    textOutput("static"),
                                    textOutput("initID"),
                                    verbatimTextOutput("log"),
                                    
                                  ),
                                  column(width=6,
                                    h5("plot:"),
                                    plotOutput("IDplot")
                                  )
                                )
                                ),
                          
                     ),),
            ),
          ),
          
        )
      )
    )
  )
  
  )
)
